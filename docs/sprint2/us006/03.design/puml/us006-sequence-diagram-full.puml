@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

actor "Vehicle Fleet\nManager" as VFM
participant ":RegisterVehicleUI" as UI
participant ":RegisterVehicleController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "registedVehiclesRepository:\nRegistedVehiclesRepository" as RegistedVehiclesRepository
participant "registedPlateCertificationsRepository:\nRegistedPlateCertificationsRepository" as RegistedPlateCertificationsRepository
participant "vehicle\n:Vehicle" as VEICULO
participant "plateCertification\n:PlateCertification" as PLATE_CERTIFICATION

autonumber 1

activate VFM

        VFM -> UI : asks to register a new vehicle
    activate UI

        UI -> CTRL** : create
    activate CTRL

        CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton

    RepositorySingleton --> CTRL: repositories
    deactivate RepositorySingleton

        CTRL -> PLAT : getRegistedVehiclesRepository()
    activate PLAT

    PLAT --> CTRL: registedVehiclesRepository
    deactivate PLAT

    CTRL -> PLAT : getRegistedPlateCertificationsRepository()

    activate PLAT

    PLAT --> CTRL: RegistedPlateCertificationsRepository
    deactivate PLAT

deactivate CTRL

    loop while intended
        UI --> VFM : requests vehicle data (i.e. Brand, Model, Type, \nTare,Gross Weight, Current Km, Register Date, \nAcquisition Date, Maintenance/Checkup Frequency (in Kms),\n vehicle plate)

    deactivate UI

        VFM -> UI : write the values of the new vehicle's attributes
    activate UI

       UI -> CTRL: createVehicle(currentKm,\n acquisitionDate,maintenance)
    activate CTRL

        CTRL -> RegistedVehiclesRepository : createVehicle(currentKm,\n acquisitionDate,maintenance)
    activate RegistedVehiclesRepository

        RegistedVehiclesRepository -> VEICULO**: createVehicle(currentKm,\n acquisitionDate,maintenance)
    activate VEICULO

        VEICULO -> VEICULO: validateVehicle(vehicle)

    RegistedVehiclesRepository <-- VEICULO : vehicle
    deactivate VEICULO

    RegistedVehiclesRepository -> RegistedVehiclesRepository: validateVehicle(vehicle)
    RegistedVehiclesRepository -> RegistedVehiclesRepository: addVehicle(vehicle)

    CTRL <-- RegistedVehiclesRepository
    deactivate RegistedVehiclesRepository

    UI <-- CTRL

    deactivate CTRL

    UI -> CTRL: createPlateCertification(brand,\n model,type,tare,grossWeight,\n registerDate,plate)

    activate CTRL

        CTRL -> RegistedPlateCertificationsRepository : createPlateCertification(brand,\n model,type,tare,grossWeight,\n registerDate,plate)
    activate RegistedPlateCertificationsRepository

    RegistedPlateCertificationsRepository -> PLATE_CERTIFICATION**: createPlateCertification(brand,\n model,type,tare,grossWeight,\n registerDate,plate)

    activate PLATE_CERTIFICATION
        PLATE_CERTIFICATION -> PLATE_CERTIFICATION: validateVehicle(vehicle)

    RegistedPlateCertificationsRepository <-- PLATE_CERTIFICATION : vehicle
    deactivate PLATE_CERTIFICATION

    RegistedPlateCertificationsRepository -> RegistedPlateCertificationsRepository: validatePlateCertification(plateCertification)
    RegistedPlateCertificationsRepository -> RegistedPlateCertificationsRepository: addPlateCertification(plateCertification)

    end

    CTRL <-- RegistedPlateCertificationsRepository
    deactivate

        CTRL -> RegistedVehiclesRepository : getRegistedVehiclesList()
    activate RegistedVehiclesRepository

    RegistedVehiclesRepository --> CTRL : registedVehiclesList
    deactivate RegistedVehiclesRepository

        CTRL -> RegistedPlateCertificationsRepository : getRegistedPlateCertificationsList()
    activate RegistedPlateCertificationsRepository

    RegistedPlateCertificationsRepository --> CTRL : registedPlateCertificationsList
    deactivate RegistedPlateCertificationsRepository

    CTRL --> UI : registedPlateCertificationsList

    deactivate CTRL

    UI --> VFM : shows all registered vehicles and asks to confirm
    deactivate UI

        VFM -> UI : confirms all vehicles
    activate UI

    UI --> VFM : displays operation success
    deactivate UI

@enduml